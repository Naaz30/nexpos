[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 13] = SP;
alias userSP R1;
userSP = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11] * 512 - 1;





alias ptbr R5;
ptbr = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 14];



alias syscall R4;
syscall = [[ptbr + 2*((userSP - 5)/512)] * 512 + ((userSP - 5)%512)];


[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = syscall;







//SemLock
if(syscall == 19)then

     alias semID R6;
     semID = [[ptbr + 2*((userSP - 4)/512)] * 512 + ((userSP - 4)%512)];


     alias perProcessTable R8;
     perProcessTable = ([PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11]*512 + 496);


     if(semID < 0 || semID > 7 || [perProcessTable + 2*semID] != 1)then

        [[ptbr + 2*((userSP - 1)/512)] * 512 + ((userSP - 1)%512)] = -1;
	    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = 0;
	    SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 13];
	    ireturn;

     endif;

     

     alias semIndex R7;
     semIndex = [perProcessTable + 2*semID + 1];

     while([SEMAPHORE_TABLE + 4*semIndex] != -1 && [SEMAPHORE_TABLE + 4*semIndex] != [SYSTEM_STATUS_TABLE + 1])do

         [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE + 1] + 4] = WAIT_SEMAPHORE;
         [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE + 1] + 5] = semIndex;
         multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8);
         call MOD_5;
         multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8);

        
     endwhile;


     [SEMAPHORE_TABLE + 4*semIndex] = [SYSTEM_STATUS_TABLE + 1];

     [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = 0;


     [[ptbr + 2*((userSP - 1)/512)] * 512 + ((userSP - 1)%512)] = 0;






endif;











//semUnlock
if(syscall == 20)then

     alias semID R6;
     semID = [[ptbr + 2*((userSP - 4)/512)] * 512 + ((userSP - 4)%512)];


     alias perProcessTable R8;
     perProcessTable = ([PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11]*512 + 496);




     if(semID < 0 || semID > 7 || [perProcessTable + 2*semID] == -1)then

        [[ptbr + 2*((userSP - 1)/512)] * 512 + ((userSP - 1)%512)] = -1;
	    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = 0;
	    SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 13];
	    ireturn;

     endif;




     
     alias semIndex R7;
     semIndex = [perProcessTable+ 2*semID + 1];

     if([SEMAPHORE_TABLE + 4*semIndex] != -1)then

         if([SEMAPHORE_TABLE + 4*semIndex] != [SYSTEM_STATUS_TABLE + 1])then

            [[ptbr + 2*((userSP - 1)/512)] * 512 + ((userSP - 1)%512)] = -2;
	        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = 0;
	        SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 13];
	        ireturn;

         endif;


         [SEMAPHORE_TABLE + 4*semIndex] = -1;



         alias i R9;
	     i = 0;

		 while(i < 16)do

            if([PROCESS_TABLE + 16*i + 4] == WAIT_SEMAPHORE && [PROCESS_TABLE + 16*i + 5] == semIndex)then
  
                [PROCESS_TABLE + 16*i + 4] = READY;

			endif;

            i = i + 1;

		 endwhile;


         
     endif;


     [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = 0;


     [[ptbr + 2*((userSP - 1)/512)] * 512 + ((userSP - 1)%512)] = 0;


endif;



SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 13];

ireturn;