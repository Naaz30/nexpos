alias functionNum R1;
alias pageNum R2;


//GetFreePage
if(functionNum == 1)then

   [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;

   while([SYSTEM_STATUS_TABLE + 2] == 0)do
     
     [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_MEM;
     multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13,R14,R15);
     call MOD_5;
     multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13,R14,R15);

   endwhile;

   [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;
   [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;

   alias i R3;
	
	i = 76;
	while(i < 128) do
		if([MEMORY_FREE_LIST + i] == 0) then
			[MEMORY_FREE_LIST + i] = 1;
			break;
		endif;
		i = i + 1;
	endwhile;
	
    alias ret R0;
	ret = i;
	
	
	return;


endif;


//RealeasePage
if(functionNum == 2)then

   [MEMORY_FREE_LIST + pageNum] = [MEMORY_FREE_LIST + pageNum] - 1;
   if([MEMORY_FREE_LIST + pageNum] == 0)then
     [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
   endif;

   alias i R3;
   i=0;

   while(i<16)do
     
      if([PROCESS_TABLE + i*16 + 4] == WAIT_MEM)then
        [PROCESS_TABLE + i*16 + 4] = READY;
      endif;

      i = i + 1;

   endwhile;

   return;

endif;








//Get Free block
if(functionNum == 3)then

  alias i R3;

  i = DISK_FREE_AREA;

  while(i < DISK_SWAP_AREA)do
       if([DISK_FREE_LIST + i] == 0)then
            [DISK_FREE_LIST + i] = 1;
            R0 = i;
            return;
       endif;
       i = i + 1;
  endwhile;

  R0 = -1;
  return;


endif;










//FreeBlock
if(functionNum == 4)then

  alias block R2;
  [DISK_FREE_LIST + block] = [DISK_FREE_LIST + block] - 1;
  return;

endif;






//GetCodePage

if(functionNum == 5)then

  alias i R3;
  i = 0;

  alias j R4;
  j = 4;

  

  while(i < MAX_PROC_NUM)do

     j = 4;
     while(j < 8)do
        
         if([DISK_MAP_TABLE + 10*i + j] == R2 && [[PROCESS_TABLE + i*16 + 14] + 2*j] != -1)then
           
            R0 = [[PROCESS_TABLE + i*16 + 14] + 2*j];
            [MEMORY_FREE_LIST + R0] = [MEMORY_FREE_LIST + R0] + 1;
            return;

         endif;

         j = j + 1;

     endwhile;


     i = i + 1;
  endwhile;

  
   multipush(R1,R2,R3,R4,R5,R6);
	R1 = 1;
	call MOD_2;
	multipop(R1,R2,R3,R4,R5,R6);
	

	multipush(R0,R1,R2,R3,R4,R5,R6);
	R4 = R2;
	R3 = R0;
	R1 = 2;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_4;
	multipop(R0,R1,R2,R3,R4,R5,R6);

  
  return;


endif;






//Get Swap block
if(functionNum == 6)then

   alias i R3;

   i = DISK_SWAP_AREA;

   while(i < DISK_SIZE)do
 
      if([DISK_FREE_LIST + i] == 0)then
         [DISK_FREE_LIST + i] = 1;
         R0 = i;
         return;
      endif;
      i = i + 1;
   endwhile;


   R0 = -1;
   return;
endif;




